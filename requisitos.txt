 üë§ DEV 1 ‚Äì M√≥dulo de Produtos (Cadastro / Atualiza√ß√£o / Persist√™ncia)
Respons√°vel por tudo relacionado a produtos: leitura do arquivo, cadastro, atualiza√ß√£o e grava√ß√£o dos dados.

- Estrutura de dados
  - Criar struct Produto { string nome; float quantidade; float valorVenda; };
  - Vetor ou std::vector<Produto> para armazenar os produtos.

- Persist√™ncia em arquivo
  - Ler o arquivo .txt na inicializa√ß√£o e carregar os produtos no vetor.
  - Salvar no .txt sempre que um produto for cadastrado ou atualizado.

- Cadastro/Atualiza√ß√£o
  - Fun√ß√£o void cadastrarProduto(vector<Produto>& produtos):
    - Perguntar nome, quantidade e valor de venda.
    - Verificar se o produto j√° existe (comparar nome).
      - Se existir: somar quantidades e atualizar valorVenda com o mais recente.
      - Se n√£o existir: inserir novo produto no vetor.
  - Retornar ao menu ap√≥s concluir.







  

üë§ DEV 2 ‚Äì M√≥dulo de Vendas (Carrinho / Totaliza√ß√£o / Atualiza√ß√£o de estoque)
Respons√°vel por registrar compras, atualizar estoque e calcular o total.

- Carrinho de compras
  - Criar struct ItemVenda { string nome; float quantidade; float precoUnitario; float subtotal; };
  - Vetor para armazenar os itens da venda corrente.

- Processo de venda
  - Fun√ß√£o void venderProduto(vector<Produto>& produtos):
    - Perguntar nome do produto e quantidade desejada (float para permitir fracionado).
    - Verificar estoque dispon√≠vel.
      - Se houver: subtrair do estoque, adicionar item ao carrinho.
      - Se n√£o houver: avisar indisponibilidade.
    - Permitir adicionar v√°rios produtos antes de finalizar.
  - Calcular total acumulado.
  - Salvar novo estoque no arquivo .txt ao final da venda.









üë§ DEV 3 ‚Äì M√≥dulo de Pagamentos e Interface (Menus / Formas de Pagamento / Parcelas)
Respons√°vel por menus, formas de pagamento, parcelas, datas e exibi√ß√£o final.

- Menus
  - Menu principal:
    - [1] Cadastrar produto
    - [2] Vender produto
    - [0] Sair
  - Menu de pagamento ao finalizar venda.

- Formas de pagamento
  - √Ä vista: 5% de desconto.
  - At√© 3x sem juros: dividir total igualmente.
  - At√© 12x com 10% de juros: adicionar 10% ao total, dividir parcelas igualmente.

- Datas das parcelas (ponto extra)
  - Usar <ctime> para pegar a data atual.
  - Somar 30 dias (aprox.) para cada parcela seguinte.
  - Exibir lista com n√∫mero da parcela, valor e data prevista.

- Interface amig√°vel
  - Mostrar no fim da venda:
    - Lista dos itens comprados, subtotal e total.
    - Forma de pagamento escolhida e valores das parcelas/datas.
  - Retornar ao menu principal ap√≥s exibir.
